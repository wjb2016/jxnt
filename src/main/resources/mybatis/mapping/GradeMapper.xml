<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxlt.stage.dao.GradeMapper">
  <resultMap id="BaseResultMap" type="com.jxlt.stage.model.Grade">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="oper_id" jdbcType="INTEGER" property="operId" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
     <result column="user_name" jdbcType="VARCHAR" property="userName" />
     <result column="user_grade" jdbcType="INTEGER" property="userGrade" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, grade, create_time, description, oper_id,mobile
  </sql>
  <sql id="Base_Column_List1">
    tg.id, tg.user_id, tg.grade, tg.create_time, tg.description, tg.oper_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_grade
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_grade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jxlt.stage.model.Grade">
    insert into t_grade (id, user_id, grade, 
      create_time, description, oper_id,mobile
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{grade,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR}, #{operId,jdbcType=INTEGER}
      , #{operId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jxlt.stage.model.Grade">
    insert into t_grade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="operId != null">
        oper_id,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="operId != null">
        #{operId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jxlt.stage.model.Grade">
    update t_grade
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="operId != null">
        oper_id = #{operId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jxlt.stage.model.Grade">
    update t_grade
    set user_id = #{userId,jdbcType=INTEGER},
      grade = #{grade,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      oper_id = #{operId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getGradeList" parameterType="com.jxlt.stage.model.Grade" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List1" />,tu.name as user_name
      <include refid="sql_query" />
       order by tg.oper_id,tg.grade
  	 <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
        limit #{pageStart}, #{pageSize}
    </if>
  </select>

  <select id="getGradeCount" parameterType="com.jxlt.stage.model.Grade" resultType="java.lang.Integer">
    select count(tg.id)
    <include refid="sql_query" />
  </select>

  <sql id="sql_query">
  	 from t_grade tg
  	 left join t_user tu on tg.user_id = tu.id
  	 where 1=1
    <if test="searchName != null and searchName != ''">
		and (tu.name like CONCAT('%',#{searchName,jdbcType=VARCHAR},'%')
		    or tg.description like CONCAT('%',#{searchName,jdbcType=VARCHAR},'%'))
		
	</if>
	  <if test="startTime != null and endTime != ''">
		and (tg.create_time between #{startTime,jdbcType=DATE} and #{endTime,jdbcType=DATE})
	</if> 
  </sql>
  
  <select id="getExsitGrade" parameterType="com.jxlt.stage.model.Grade" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_grade
    where 1=1
     <if test="grade != null and grade > 0">
		and grade = #{grade,jdbcType=INTEGER}
	</if>
	<if test="mobile != null and mobile != ''">
		and mobile = #{mobile,jdbcType=VARCHAR}
	</if>
	<if test="userId != null and userId > 0">
		and user_id = #{userId,jdbcType=INTEGER}
	</if>
	<if test="createTime != null ">
		and DATEDIFF(create_time,#{createTime,jdbcType=DATE}) = 0
	</if>
   </select>
   <select id="getGradeByUserId" parameterType="com.jxlt.stage.model.Grade" resultMap="BaseResultMap">
     select 
     <include refid="Base_Column_List" />
     from t_grade
     where user_id = #{userId,jdbcType=INTEGER} order by id desc
   </select>
    <select id="getExpiredGrade" parameterType="com.jxlt.stage.model.Grade" resultMap="BaseResultMap" >
    select 
     <include refid="Base_Column_List1" />,tu.grade as user_grade
      from t_grade tg
      left join t_user tu on tu.id=tg.user_id
    where 1=1
    and tg.oper_id = 0
    and 0 > tg.grade
    and DATEDIFF(now(),tg.create_time) > 1
  </select>
</mapper>