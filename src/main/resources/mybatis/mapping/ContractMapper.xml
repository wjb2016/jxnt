<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jxlt.stage.dao.ContractMapper" >
  <resultMap id="BaseResultMap" type="com.jxlt.stage.model.Contract" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column=" contract_number" property="contractNumber" jdbcType="VARCHAR" />
    <result column="contract_type" property="contractType" jdbcType="INTEGER" />
    <result column="order_type_id" property="orderTypeId" jdbcType="INTEGER" />
    <result column="order_type_parentId" property="orderTypeParentid" jdbcType="INTEGER" />
    <result column="keep_time" property="keepTime" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="used_grade" property="usedGrade" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mobile, " contract_number", contract_type, order_type_id, order_type_parentId, 
    keep_time, start_time, end_time, status, used_grade
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jxlt.stage.model.Contract" >
    insert into t_contract (id, mobile, " contract_number", 
      contract_type, order_type_id, order_type_parentId, 
      keep_time, start_time, end_time, 
      status, used_grade)
    values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{contractNumber,jdbcType=VARCHAR}, 
      #{contractType,jdbcType=INTEGER}, #{orderTypeId,jdbcType=INTEGER}, #{orderTypeParentid,jdbcType=INTEGER}, 
      #{keepTime,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{usedGrade,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jxlt.stage.model.Contract" >
    insert into t_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="contractNumber != null" >
        " contract_number",
      </if>
      <if test="contractType != null" >
        contract_type,
      </if>
      <if test="orderTypeId != null" >
        order_type_id,
      </if>
      <if test="orderTypeParentid != null" >
        order_type_parentId,
      </if>
      <if test="keepTime != null" >
        keep_time,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="usedGrade != null" >
        used_grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="contractNumber != null" >
        #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        #{contractType,jdbcType=INTEGER},
      </if>
      <if test="orderTypeId != null" >
        #{orderTypeId,jdbcType=INTEGER},
      </if>
      <if test="orderTypeParentid != null" >
        #{orderTypeParentid,jdbcType=INTEGER},
      </if>
      <if test="keepTime != null" >
        #{keepTime,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="usedGrade != null" >
        #{usedGrade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jxlt.stage.model.Contract" >
    update t_contract
    <set >
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="contractNumber != null" >
        " contract_number" = #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="contractType != null" >
        contract_type = #{contractType,jdbcType=INTEGER},
      </if>
      <if test="orderTypeId != null" >
        order_type_id = #{orderTypeId,jdbcType=INTEGER},
      </if>
      <if test="orderTypeParentid != null" >
        order_type_parentId = #{orderTypeParentid,jdbcType=INTEGER},
      </if>
      <if test="keepTime != null" >
        keep_time = #{keepTime,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="usedGrade != null" >
        used_grade = #{usedGrade,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jxlt.stage.model.Contract" >
    update t_contract
    set mobile = #{mobile,jdbcType=VARCHAR},
      " contract_number" = #{contractNumber,jdbcType=VARCHAR},
      contract_type = #{contractType,jdbcType=INTEGER},
      order_type_id = #{orderTypeId,jdbcType=INTEGER},
      order_type_parentId = #{orderTypeParentid,jdbcType=INTEGER},
      keep_time = #{keepTime,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      used_grade = #{usedGrade,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>